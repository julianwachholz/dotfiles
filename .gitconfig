[user]
	name = Julian Wachholz
	email = me@julianwachholz.ch

[core]
	pager = less -FRSX
	editor = nano
	excludesfile = ~/.gitignore_global

[color]
	ui = auto

[alias]
	s = status
	ci = commit
	co = checkout
	d = diff
	b = branch
	div = divergence
	pom = push origin master
	fa = fetch --all
	aa = add --all
	ua = reset HEAD
	l = log --graph --abbrev-commit --date=relative
	la = !git l --all
	r = !git --no-pager l -20
	ra = !git r --all
	head = !git l -1
	h = !git head

[merge]
	# Include the summary of merged commits into all newly created merge
	# commits. The newly created merge commit will contain a one-line summary
	# of every (well, most) merged commits
	log = true

	# Show merge statistics after merge
	stat = true

[branch]
	# auto track remote branches
	autoseupmerge = always

[branch "master"]
	# This is the list of cmdline options that should be added to git-merge                                     
	# when I merge commits into the master branch.
	#                                                                                                           
	# First off, the option --no-commit instructs git not to commit the merge                                   
	# by default. This allows me to do some final adjustment to the commit log                                  
	# message before it gets commited. I often use this to add extra info to                                    
	# the merge message or rewrite my local branch names in the commit message                                  
	# to branch names sensible to the casual reader of the git log.                                             
	#                                                                                                           
	# Option --no-ff instructs git to always record a merge commit, even if                                     
	# the branch being merged into can be fast-forwarded. This is often the                                     
	# case when you create a short-lived topic branch which tracks master, do                                   
	# some changes on the topic branch and then merge the changes into the                                      
	# master which remained unchanged while you were doing your work on the                                     
	# topic branch. In this case the master branch can be fast-forwarded (that                                  
	# is the tip of the master branch can be updated to point to the tip of                                     
	# the topic branch) and this is what git does by default. With --no-ff                                      
	# option set git creates a real merge commit which records the fact that                                    
	# another branch was merged. I find this easier to understand and read in                                   
	# the log.                                                                                                  
	mergeoptions = --no-commit --no-ff

[format]
	pretty = format:%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%an %cr)%Creset
[push]
	default = simple
